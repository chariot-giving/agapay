openapi: 3.0.0
info:
  title: Chariot Payments API
  version: "v1"
  description: The Chariot Payments REST API.
  contact:
    name: Chariot Development Team
    url: https://www.givechariot.com/contact
    email: developers@givechariot.com
  termsOfService: https://www.givechariot.com/legal-nonprofit
servers:
  - url: https://sandboxapi.givechariot.com
    description: Sandbox
  - url: https://api.givechariot.com
    description: Production
security:
  - bearerAuth: []
paths:
  /accounts:
    post:
      summary: Create an account
      description: |
        Create a bank account with Chariot.
        This endpoint is used to create a bank account for a payer in the Chariot Giving Payment Network.
        The account is setup in the "For-Benefit-Of" (FBO) model where the account is owned and maintained by Chariot.
        An account is necessary in order to make and send payments to nonprofits.
      operationId: createAccount
      tags:
        - accounts
      requestBody:
        description: The account to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "201":
          description: The account was created
          headers:
            Location:
              $ref: "#/components/headers/Location"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "409":
          $ref: "#/components/responses/ConflictError"
    get:
      summary: List accounts
      description: |
        List accounts.
        This endpoint is used to list accounts.
      operationId: listAccounts
      tags:
        - accounts
      parameters:
        - name: limit
          in: query
          description: Limit the size of the list that is returned. The default (and maximum) is 100 objects.
          required: false
          schema:
            type: integer
            format: int32
        - name: cursor
          in: query
          description: The cursor to use for pagination. If not set, the first page of results will be returned.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The accounts were retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountList"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "409":
          $ref: "#/components/responses/ConflictError"
  /accounts/{id}:
    get:
      summary: Retrieve an account
      description: |
        Get an account by its unique identifier.
        This endpoint is used to retrieve an account by its unique identifier.
      operationId: getAccount
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          description: The unique identifier for the account
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The account was retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/ConflictError"
  /accounts/{id}/balances:
    get:
      summary: Retrieve account balances
      description: |
        Get the balances for an account.
        This endpoint is used to retrieve the balances for a single account.
      operationId: getAccountBalances
      tags:
        - balances
      parameters:
        - name: id
          in: path
          description: The unique identifier for the account
          required: true
          schema:
            type: string
        - name: timestamp
          in: query
          description: The date and time to retrieve balances for. If not set, returns the current balances.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: The balances were retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountBalance"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/ConflictError"
  /accounts/{id}/details:
    get:
      summary: Retrieve account details
      description: |
        Get the details for an account.
        This endpoint is used to retrieve the details for a single account.
      operationId: getAccountDetails
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          description: The unique identifier for the account
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The details were retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetails"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
  /transfers:
    post:
      summary: Transfer funds
      description: |
        Transfer funds between accounts.
        This endpoint is used to move money into and out of the Chariot account from an external bank account.
      operationId: transferFunds
      tags:
        - transfers
      requestBody:
        description: The transfer to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transfer"
      responses:
        "201":
          description: The transfer was created
          headers:
            Location:
              $ref: "#/components/headers/Location"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "409":
          $ref: "#/components/responses/ConflictError"
    get:
      summary: List transfers
      description: |
        List transfers.
        This endpoint is used to list transfers.
      operationId: listTransfers
      tags:
        - transfers
      parameters:
        - name: account_id
          in: query
          description: The unique identifier for the account
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the size of the list that is returned. The default (and maximum) is 100 objects.
          required: false
          schema:
            type: integer
            format: int32
        - name: cursor
          in: query
          description: The cursor to use for pagination. If not set, the first page of results will be returned.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The transfers were retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferList"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "409":
          $ref: "#/components/responses/ConflictError"
  /transfers/{id}:
    get:
      summary: Retrieve a transfer
      description: |
        Get a transfer by its unique identifier.
        This endpoint is used to retrieve a transfer by its unique identifier.
      operationId: getTransfer
      tags:
        - transfers
      parameters:
        - name: id
          in: path
          description: The unique identifier for the transfer
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The transfer was retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/ConflictError"
  /payments:
    post:
      summary: Create a payment
      description: |
        Create a payment.
        This endpoint is used to send money to a nonprofit recipient.
      operationId: createPayment
      tags:
        - payments
      requestBody:
        description: The payment to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        "201":
          description: The payment was created
          headers:
            Location:
              $ref: "#/components/headers/Location"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "409":
          $ref: "#/components/responses/ConflictError"
    get:
      summary: List payments
      description: |
        List payments.
        This endpoint is used to list payments.
      operationId: listPayments
      tags:
        - payments
      parameters:
        - name: account_id
          in: query
          description: The unique identifier for the account
          required: true
          schema:
            type: string
        - name: recipient_id
          in: query
          description: The unique identifier for the recipient
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the size of the list that is returned. The default (and maximum) is 100 objects.
          required: false
          schema:
            type: integer
            format: int32
        - name: cursor
          in: query
          description: The cursor to use for pagination. If not set, the first page of results will be returned.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The payments were retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentList"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "409":
          $ref: "#/components/responses/ConflictError"
  /payments/{id}:
    get:
      summary: Retrieve a payment
      description: |
        Get a payment by its unique identifier.
        This endpoint is used to retrieve a payment by its unique identifier.
      operationId: getPayment
      tags:
        - payments
      parameters:
        - name: id
          in: path
          description: The unique identifier for the payment
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The payment was retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/ConflictError"
  /recipients:
    post:
      summary: Create a recipient
      description: |
        Create a recipient.
        This endpoint is used to create a recipient.
      operationId: createRecipient
      tags:
        - recipients
      requestBody:
        $ref: "#/components/requestBodies/CreateRecipientRequest"
      responses:
        "201":
          description: The recipient was created
          headers:
            Location:
              $ref: "#/components/headers/Location"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipient"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "409":
          $ref: "#/components/responses/ConflictError"
    get:
      summary: List recipients
      description: |
        List recipients.
        This endpoint is used to list recipients.
      operationId: listRecipients
      tags:
        - recipients
      parameters:
        - name: ein
          in: query
          description: The Employer Identification Number (EIN) for the recipient.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the size of the list that is returned. The default (and maximum) is 100 objects.
          required: false
          schema:
            type: integer
            format: int32
        - name: cursor
          in: query
          description: The cursor to use for pagination. If not set, the first page of results will be returned.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The recipients were retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipientList"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
  /recipients/{id}:
    get:
      summary: Retrieve a recipient
      description: |
        Get a recipient by its unique identifier.
        This endpoint is used to retrieve a recipient by its unique identifier.
      operationId: getRecipient
      tags:
        - recipients
      parameters:
        - name: id
          in: path
          description: The unique identifier for the recipient
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The recipient was retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipient"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/ConflictError"
  /transactions:
    get:
      summary: List transactions
      description: |
        List transactions.
        This endpoint is used to list transactions for an account.
      operationId: listTransactions
      tags:
        - transactions
      parameters:
        - name: account_id
          in: query
          description: The unique identifier for the account
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the size of the list that is returned. The default (and maximum) is 100 objects.
          required: false
          schema:
            type: integer
            format: int32
        - name: cursor
          in: query
          description: The cursor to use for pagination. If not set, the first page of results will be returned.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The transactions were retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionList"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
  /transactions/{id}:
    get:
      summary: Retrieve a transaction
      description: |
        Get a transaction by its unique identifier.
        This endpoint is used to retrieve a transaction by its unique identifier.
      operationId: getTransaction
      tags:
        - transactions
      parameters:
        - name: id
          in: path
          description: The unique identifier for the transaction
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The transaction was retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/AuthenticationError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/ConflictError"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Opaque
  headers:
    X-Request-Id:
      description: The unique identifier for the request
      schema:
        type: string
    Idempotency-Key:
      description: |
        The unique identifier for the request.
        This header is used to ensure idempotency for requests that may be retried.
      schema:
        type: string
    Location:
      description: The URI reference of the created object.
      schema:
        type: string
        format: uri
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the account
          example: "1234567890"
          readOnly: true
        name:
          type: string
          description: The name of the account
          example: "Payer FBO Account"
        us_bank_account_id:
          type: string
          description: The unique identifier for the US bank account
          example: "1234567890"
          readOnly: true
        us_bank_account_number_id:
          type: string
          description: The unique identifier for the US bank account number
          example: "1234567890"
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: The date and time the account was created
          example: "2020-07-10 15:00:00.000"
          readOnly: true
    AccountList:
      type: object
      description: A list of accounts
      properties:
        data:
          type: array
          description: The list of accounts
          items:
            $ref: "#/components/schemas/Account"
        paging:
          $ref: "#/components/schemas/Pagination"
    AchNumber:
      type: object
      description: The identifying number used for making electronic transfers to an account
      properties:
        account_number:
          type: string
          description: The account number
          readOnly: true
          example: "1234567890"
        routing_number:
          type: string
          description: The American Bankers' Association (ABA) Routing Transit Number (RTN).
          readOnly: true
          example: "123456789"
    AccountNumbers:
      type: object
      description: The identifying numbers used for making electronic transfers to accounts
      properties:
        ach:
          type: array
          description: The ACH numbers
          items:
            $ref: "#/components/schemas/AchNumber"
    AccountDetails:
      type: object
      description: The details of an account
      properties:
        numbers:
          $ref: "#/components/schemas/AccountNumbers"
        status:
          type: string
          description: The status of the account
          readOnly: true
          example: "open"
          enum:
            - open
            - closed
    AccountBalance:
      type: object
      description: The balance of an account
      properties:
        account_id:
          type: string
          description: The unique identifier for the account
          example: "1234567890"
          readOnly: true
        current_balance:
          type: integer
          format: int64
          description: The Account's current balance, representing the sum of all posted Transactions on the Account.
          example: 10000
          readOnly: true
        available_balance:
          type: integer
          format: int64
          description: The Account's available balance, representing the current balance less any open Pending Transactions on the Account.
          example: 10000
          readOnly: true
    Pagination:
      description: The paging information
      properties:
        cursors:
          type: object
          description: The cursors for the next and previous pages
          properties:
            before:
              type: string
              description: The cursor for the previous page
              example: "eyJpZCI6IjEyMzQ1Njc4OTAiLCJ0aW1lc3RhbXAiOiIyMDIwLTA3LTEwIDE1OjAwOjAwLjAwMCJ9"
            after:
              type: string
              description: The cursor for the next page
              example: "eyJpZCI6IjEyMzQ1Njc4OTAiLCJ0aW1lc3RhbXAiOiIyMDIwLTA3LTEwIDE1OjAwOjAwLjAwMCJ9"
        total:
          type: integer
          description: The total number of objects
          example: 100
    Payment:
      type: object
      description: A payment moves funds from a Chariot account to a verified nonprofit recipient.
      required:
        - account_id
        - amount
        - recipient_id
        - description
      properties:
        id:
          type: string
          description: The unique identifier for the payment
          example: "1234567890"
          readOnly: true
        account_id:
          type: string
          description: The identifier for the Chariot account that will send the payment.
          example: "1234567890"
        amount:
          type: integer
          format: int64
          description: The payment amount in USD cents. Must be a positive amount.
          example: 10000
        recipient_id:
          type: string
          description: The identifier for the organization that will receive the payment.
          example: "charity_658744hjksd23j"
        description:
          type: string
          description: |
            A description of the payment.
            Remittance information for the payment that will show on the recipient's bank statement.
          example: "Payment to Nonprofit"
        chariot_id:
          type: string
          description: |
            The unique identifier for the initiated payment from Chariot.
            This is useful if the payment was initiated by Chariot and allows for end-to-end tracking of the payment for the donor.
          example: "1200321"
        transaction_id:
          type: string
          description: The unique identifier for the transaction funding the payment.
          example: "transaction_uyrp7fld2ium70oa7oi"
          readOnly: true
        status:
          type: string
          description: The status of the payment
          example: "pending"
          enum:
            - canceled
            - pending
            - submitted
            - complete
            - rejected
        created_at:
          type: string
          format: date-time
          description: The date and time the payment was created
          example: "2020-07-10 15:00:00.000"
          readOnly: true
    PaymentList:
      description: A list of payments
      properties:
        data:
          type: array
          description: The list of payments
          items:
            $ref: "#/components/schemas/Payment"
        paging:
          $ref: "#/components/schemas/Pagination"
    PaymentIntent:
      type: object
      description: A payment intent is a request to send funds to a verified nonprofit recipient.
      properties:
        id:
          type: string
          description: The unique identifier for the payment intent
          example: "1234567890"
          readOnly: true
        amount:
          type: integer
          format: int64
          description: The payment amount in USD cents. Must be a positive amount.
          example: 10000
        recipient_id:
          type: string
          description: The identifier for the organization that will receive the payment.
          example: "charity_658744hjksd23j"
        description:
          type: string
          description: |
            A description of the payment.
            Remittance information for the payment that will show on the recipient's bank statement.
          example: "Payment to Nonprofit"
        chariot_id:
          type: string
          description: |
            The unique identifier for the initiated payment from Chariot.
            This is useful if the payment was initiated by Chariot and allows for end-to-end tracking of the payment for the donor.
          example: "1200321"
        created_at:
          type: string
          format: date-time
          description: The date and time the payment intent was created
          example: "2020-07-10 15:00:00.000"
          readOnly: true
    Recipient:
      type: object
      description: A recipient is a verified nonprofit organization account that can receive payments.
      properties:
        id:
          type: string
          description: The unique identifier for the recipient
          format: uuid
          example: "5c68bae5-6671-4899-9151-dc3c0df92544"
          readOnly: true
        name:
          type: string
          description: The name of the recipient
          example: "Chariot Giving Network"
        ein:
          type: string
          description: The Employer Identification Number (EIN) for the recipient.
          example: "123456789"
        primary:
          type: boolean
          description: |
            Indicates whether the recipient is the primary recipient for the EIN.
            Only one recipient can be the primary recipient for an EIN.
          example: true
        status:
          type: string
          description: The status of the recipient
          readOnly: true
          example: "verified"
          enum:
            - unverified
            - verified
        created_at:
          type: string
          format: date-time
          description: The date and time the recipient was created
          example: "2020-07-10 15:00:00.000"
          readOnly: true
    RecipientList:
      description: A list of recipients
      properties:
        data:
          type: array
          description: The list of recipients
          items:
            $ref: "#/components/schemas/Recipient"
        paging:
          type: object
          description: The paging information
          properties:
            cursors:
              type: object
              description: The cursors for the next and previous pages
              properties:
                before:
                  type: string
                  description: The cursor for the previous page
                  example: "eyJpZCI6IjEyMzQ1Njc4OTAiLCJ0aW1lc3RhbXAiOiIyMDIwLTA3LTEwIDE1OjAwOjAwLjAwMCJ9"
                after:
                  type: string
                  description: The cursor for the next page
                  example: "eyJpZCI6IjEyMzQ1Njc4OTAiLCJ0aW1lc3RhbXAiOiIyMDIwLTA3LTEwIDE1OjAwOjAwLjAwMCJ9"
            total:
              type: integer
    RecipientBankAddress:
      type: object
      description: The bank address for a recipient
      required:
        - account_number
        - routing_number
      properties:
        account_number:
          type: string
          description: The account number
          example: "1234567890"
        routing_number:
          type: string
          description: The American Bankers' Association (ABA) Routing Transit Number (RTN).
          example: "123456789"
    Transaction:
      type: object
      description: Transactions are the immutable additions and removals of money from your account. They're the equivalent of line items on your bank statement.
      required:
        - id
        - account_id
        - amount
        - description
      properties:
        id:
          type: string
          description: The unique identifier for the transaction
          example: "transaction_uyrp7fld2ium70oa7oi"
          readOnly: true
        account_id:
          type: string
          description: The unique identifier for the account
          example: "1234567890"
          readOnly: true
        amount:
          type: integer
          format: int64
          description: The transaction amount in USD cents. A positive amount represents a credit to the account. A negative amount represents a debit to the account.
          example: 10000
          readOnly: true
        description:
          type: string
          description: An informational message describing this transaction. Use the fields in source to get more detailed information. This field appears as the line-item on the statement.
          example: "Payment to Nonprofit"
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: The date and time the transaction was created
          example: "2020-07-10 15:00:00.000"
          readOnly: true
    TransactionList:
      description: A list of transactions
      properties:
        data:
          type: array
          description: The list of transactions
          items:
            $ref: "#/components/schemas/Transaction"
        paging:
          $ref: "#/components/schemas/Pagination"
    Transfer:
      type: object
      description: A transfer moves funds between accounts using ACH.
      required:
        - account_id
        - amount
        - account_number
        - routing_number
        - description
      properties:
        id:
          type: string
          description: The unique identifier for the transfer
          example: "1234567890"
          readOnly: true
        account_id:
          type: string
          description: The identifier for the Chariot account that will send the transfer.
          example: "1234567890"
        description:
          type: string
          description: |
            A description of the transfer.
            Remittance information for the transfer that will show on the recipient's bank statement.
          example: "Transfer to FBO Account"
        amount:
          type: integer
          format: int64
          description: The transfer amount in USD cents. A positive amount originates a credit transfer pushing funds to the receiving account. A negative amount originates a debit transfer pulling funds from the receiving account.
          example: 10000
        account_number:
          type: string
          description: The account number for the destination account.
          example: "1234567890"
        routing_number:
          type: string
          description: The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account.
          example: "123456789"
        funding:
          type: string
          description: The type of the account to which the transfer will be sent.
          example: "checking"
          enum:
            - checking
            - savings
        transaction_id:
          type: string
          description: The unique identifier for the transaction funding the transfer.
          example: "transaction_uyrp7fld2ium70oa7oi"
          readOnly: true
        status:
          type: string
          description: The status of the transfer
          example: "pending"
          enum:
            - canceled
            - pending
            - submitted
            - returned
            - rejected
        created_at:
          type: string
          format: date-time
          description: The date and time the transfer was created
          example: "2020-07-10 15:00:00.000"
          readOnly: true
    TransferList:
      description: A list of transfers
      properties:
        data:
          type: array
          description: The list of transfers
          items:
            $ref: "#/components/schemas/Transfer"
        paging:
          $ref: "#/components/schemas/Pagination"
    ApiError:
      type: object
      description: An API error
      properties:
        timestamp:
          type: string
          format: date-time
          description: The date and time the error occurred
          readOnly: true
        status:
          type: integer
          description: The HTTP status code
          readOnly: true
        error:
          type: string
          description: The HTTP status message
          readOnly: true
        message:
          type: string
          description: The error message
          readOnly: true
  requestBodies:
    CreateRecipientRequest:
      description: The request body for creating a recipient
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the recipient
                example: "Chariot Giving"
              ein:
                type: string
                description: The Employer Identification Number (EIN) for the recipient.
                example: "123456789"
              primary:
                type: boolean
                description: |
                  Indicates whether the recipient is the primary recipient for the EIN.
                  Only one recipient can be the primary recipient for an EIN.
                example: true
              bank_address:
                $ref: "#/components/schemas/RecipientBankAddress"
  responses:
    BadRequestError:
      description: The request is invalid or contains invalid parameters
      headers:
        X-Request-Id:
          $ref: "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
          example:
            timestamp: "2020-07-10 15:00:00.000"
            code: 400
            error: "Bad Request"
            message: "Expected an API key to be provided in the header `x-chariot-api-key`"
    AuthenticationError:
      description: Unauthorized. The request is missing the security (OAuth2 Bearer token) requirements and the server is unable to verify the identify of the caller.
      headers:
        X-Request-Id:
          $ref: "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
          example:
            timestamp: "2020-07-10 15:00:00.000"
            code: 401
            error: "Unauthorized"
            message: "Unauthorized"
    ForbiddenError:
      description: Access denied
      headers:
        X-Request-Id:
          $ref: "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
          example:
            timestamp: "2020-07-10 15:00:00.000"
            code: 403
            error: "Forbidden"
            message: "User is not allowed to access this resource"
    NotFoundError:
      description: Resource Not Found
      headers:
        X-Request-Id:
          $ref: "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
          example:
            timestamp: "2020-07-10 15:00:00.000"
            code: 404
            error: "Not Found"
            message: "Resource is not found"
    ConflictError:
      description: Resource Conflicts
      headers:
        X-Request-Id:
          $ref: "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
          example:
            timestamp: "2020-07-10 15:00:00.000"
            code: 409
            error: "Conflict"
            message: "Request conflicts with an already existing resource"
    GoneError:
      description: Resource Gone or Expired
      headers:
        X-Request-Id:
          $ref: "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
          example:
            timestamp: "2020-07-10 15:00:00.000"
            code: 410
            error: "Gone"
            message: "The resource has expired"
    InternalServerError:
      description: Internal Server Error
      headers:
        X-Request-Id:
          $ref: "#/components/headers/X-Request-Id"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"
          example:
            timestamp: "2020-07-10 15:00:00.000"
            code: 500
            error: "Internal server error"
            message: "The server encountered an error processing your request"
